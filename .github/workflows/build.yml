name: Build Docker Image

on:
  schedule:
    # Every day at 5am
    - cron: "0 5 * * *"
  workflow_dispatch:

jobs:
  build:
    name: Build Client Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: nextcloud/notify_push
          fetch-depth: 0

      - name: Get latest release
        id: latest-release
        run: |
          tag=$(git describe --abbrev=0 --tags)
          echo "tag=${tag}" >> $GITHUB_OUTPUT
          echo "hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          git checkout $tag

      - name: Check Docker image exists
        id: inspect
        run: |
          image=${{ secrets.DOCKERHUB_USERNAME }}/notify_push:latest
          docker pull $image
          hash=$(docker inspect --format '{{ index .Config.Labels "org.opencontainers.image.revision" }}' $image)
          [[ $hash != '${{ steps.latest-release.outputs.hash }}' ]] && echo 'build=true' >> $GITHUB_OUTPUT || exit 0

      - name: Docker meta
        if: ${{ steps.inspect.outputs.build == 'true' }}
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/notify_push
          labels: |
            org.opencontainers.image.title=notify_push
            org.opencontainers.image.description=Update notifications for nextcloud clients
            org.opencontainers.image.source=https://github.com/nextcloud/notify_push
            org.opencontainers.image.version=${{ steps.latest-release.outputs.tag }}
            org.opencontainers.image.revision=${{ steps.latest-release.outputs.hash }}

      - name: Set up Docker Buildx
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: ${{ steps.inspect.outputs.build == 'true' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/notify_push:latest, ${{ secrets.DOCKERHUB_USERNAME }}/notify_push:${{ steps.latest-release.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/notify_push:latest
          cache-to: type=inline
